services:
  redis:
    container_name: scout-redis
    image: docker.io/valkey/valkey:8-alpine
    command: valkey-server --save 30 1 --loglevel warning
    restart: unless-stopped
    volumes:
      - redis-data:/data
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    networks:
      - scout-net

  searxng:
    container_name: scout-searxng
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ../searxng:/etc/searxng:rw,z
    environment:
      - SEARXNG_URL=http://localhost:8080/
      - SEARXNG_SECRET_KEY=${SEARXNG_SECRET_KEY:-changeme}
      - UWSGI_WORKERS=4
      - UWSGI_THREADS=4
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    depends_on:
      - redis
    networks:
      - scout-net

  chromadb:
    container_name: scout-chromadb
    image: ghcr.io/chroma-core/chroma:latest
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_AUTH_ENABLED=false
      - PERSIST_DIRECTORY=/chroma
    volumes:
      - chroma-data:/chroma
    networks:
      - scout-net

  postgres:
    container_name: scout-postgres
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=scout
      - POSTGRES_USER=scout
      - POSTGRES_PASSWORD=scout123
      - POSTGRES_INITDB_ARGS="--encoding=UTF-8"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scout -d scout"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - scout-net

  steel-browser:
    container_name: scout-steel-browser
    image: ghcr.io/steel-dev/steel-browser-api:latest
    restart: unless-stopped
    ports:
      - "3003:3000"
      - "9224:9223"
    environment:
      - PORT=3000
      - DOMAIN=0.0.0.0:3000
      - CDP_DOMAIN=0.0.0.0:9223
    volumes:
      - steel-cache:/app/.cache
    networks:
      - scout-net

  frontend:
    container_name: scout-frontend
    build:
      context: ..
      dockerfile: ./apps/frontend/Dockerfile
    restart: unless-stopped
    ports:
      - "3010:3000"
    environment:
      - HOSTNAME=0.0.0.0
      - PORT=3000
      # LM Studio connection (from host)
      - LMSTUDIO_URL=http://host.docker.internal:1234/v1
      - LMSTUDIO_API_KEY=lm-studio
      # Local model configuration
      - LOCAL_MODEL=openai/gpt-oss-20b
      # External services (Docker service names)
      - SEARXNG_BASE_URL=http://searxng:8080
      # Steel Browser integration
      - STEEL_BROWSER_URL=http://steel-browser:3000
      - CHROMADB_URL=http://chromadb:8000
      # Database configuration
      - DATABASE_URL=postgresql://scout:scout123@postgres:5432/scout
    depends_on:
      - searxng
      - steel-browser
      - postgres
    networks:
      - scout-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  
volumes:
  redis-data:
  chroma-data:
  postgres-data:
  steel-cache:

networks:
  scout-net:
    driver: bridge

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
